"use strict";(self.webpackChunkshader_tutorial=self.webpackChunkshader_tutorial||[]).push([[429],{6187:function(e,t,r){r.r(t);var a=r(4794),n=r(6540),o=r(9460),l=r(7570),s=r(2269);t.default=e=>{let{location:{pathname:t}}=e;return n.createElement(l.A,null,n.createElement(s.A,{pathname:t,title:"FAQ",keywords:["gpu","shader","tutorial","faq","frequently","asked","questions"]}),n.createElement(o.A,null,n.createElement("h1",null,"FAQ"),n.createElement("dl",{className:"faq-list"},n.createElement("dt",null,"How can one contact you with regards to the website?"),n.createElement("dd",null,n.createElement("p",null,"If you have anything you wish to say related to the website (feedback, issues, improvements, questions), feel free to open up an issue at the"," ",n.createElement("a",{href:"https://github.com/sabarnac/shader-tutorial/issues",target:"_blank",rel:"noopener noreferrer"},"GitHub repository"),". For other things, my email is available on GitHub.")),n.createElement("dt",null,"How can I run these GPU shader code snippets?"),n.createElement("dd",null,n.createElement("p",null,"There are multiple GPU shader sandbox websites available, like"," ",n.createElement("a",{href:"http://shadertoy.com/",target:"_blank",rel:"noopener noreferrer"},"Shadertoy")," ","where you can run these examples. Some modifications may be required to be made depending on which website you choose to use, but as long as the concepts taught are applied properly, you should see proper results."),n.createElement("p",null,"There is an open issue to"," ",n.createElement("a",{href:"https://github.com/sabarnac/shader-tutorial/issues/9",target:"_blank",rel:"noopener noreferrer"},"add links below the examples to shader sandbox websites")," ","to allow users to experiment with the code shown.")),n.createElement("dt",null,"Why was GLSL chosen as the language to teach the concepts with?"),n.createElement("dd",null,n.createElement("p",null,"The procedural nature and the syntax of the language make it easy to explain concepts efficiently. This also allows the concepts shown through the language to be translatable into other languages with relative ease, since the procedural nature of the code is very easy to convert into other programming language paradigms."),n.createElement("p",null,"This may seem to go against goal of being language agnostic since only one language is used, but the tutorial focuses on the concepts shown within the code written in that language, which does allow the tutorial to be language agnostic."),n.createElement("p",null,"However, there is an open issue to"," ",n.createElement("a",{href:"https://github.com/sabarnac/shader-tutorial/issues/2",target:"_blank",rel:"noopener noreferrer"},"add in code snippets in other languages")," ","that are hidden by default, and can be viewed by clicking a link that reveals them. This is done in certain chapters (eg:"," ",n.createElement(a.Link,{href:"/advanced/transparency/"},"transparency chapter"),") already.")),n.createElement("dt",null,"How can I debug shader code?"),n.createElement("dd",null,n.createElement("p",null,"Unlike normal software development, where one can use a debugger or even output data to cehck the behaviour of applications, shaders are not as easy to debug and fix with certain graphics APIs."),n.createElement("p",null,"There are multiple tools available that can be attached to applications to provide some utilities to debug shaders, but a lot of debugging is still be based on trial and error."),n.createElement("p",null,"If there is an obvious code error in the shader, like a syntax error, the shader compiler should be able to catch the bug and throw an error for you."),n.createElement("p",null,"In other cases where the shader doesn't work as expected and the compiler throws no errors, restart development with shader code that you know works, and slowly build up line by line till it breaks."),n.createElement("p",null,"A great WebGL utility for debugging, and one that can be used on this website. is"," ",n.createElement("a",{href:"https://spector.babylonjs.com/",target:"_blank",rel:"noopener noreferrer"},"Spector.js"),". It's available for Chrome and Firefox, and provides a great way to record and debug a frame render with a lot of useful information to go with it."),n.createElement("p",null,"Another WebGL debugger that can be used on this website is"," ",n.createElement("a",{href:"https://benvanik.github.io/WebGL-Inspector/",target:"_blank",rel:"noopener noreferrer"},"WebGL Inspector"),". It isn't available on the Chrome Extensions Store, so it will require manual installation, but it does provide some functionality similar to Spector.js.")),n.createElement("dt",null,"Do you have references for where one can learn about programming using graphics APIs in general, learning about graphics rendering itself, or learning about some ways to apply it?"),n.createElement("dd",null,n.createElement("p",null,"The site where I personally first started learning about graphics API programming (OpenGL to be specific) was"," ",n.createElement("a",{href:"https://www.opengl-tutorial.org/",target:"_blank",rel:"noopener noreferrer"},"OpenGL Tutorial"),", which has been referenced multiple times in this website."),n.createElement("p",null,"The"," ",n.createElement("a",{href:"https://www.glprogramming.com/red/",target:"_blank",rel:"noopener noreferrer"},"OpenGL Red Handbook"),", as well as"," ",n.createElement("a",{href:"https://learnopengl.com/",target:"_blank",rel:"noopener noreferrer"},"Learn OpenGL")," ","are other good sources for learning OpenGL and GLSL programming."),n.createElement("p",null,"I currently do not have any sources for DirectX and HLSL programming, but I will update this section when I do find reliable ones."),n.createElement("p",null,"To learn about the graphics rendering pipeline in a lot of detail, check out the blog series"," ",n.createElement("a",{href:"https://fgiesen.wordpress.com/2011/07/09/a-trip-through-the-graphics-pipeline-2011-index/",rel:"noopener noreferrer",target:"_blank"},"A trip through the Graphics Pipeline 2011"),", which is great."),n.createElement("p",null,"There is a great course on Awwwards Academy called"," ",n.createElement("a",{href:"https://www.awwwards.com/academy/course/the-fun-process-of-creating-lively-interactive-3d-scenes-for-the-web"},"The fun process of creating lively interactive 3D scenes for the web")," ","that provides some great learning for creating interactive 3D scenes (as it says in the name). It is a paid course but a great one for those interested in learning more in that area. The course primarily teaches with WebGL, using the Three.js library.")),n.createElement("dt",null,"Are all the materials shown on the website your own?"),n.createElement("dd",null,n.createElement("p",null,"No, not all of the materials shown are owned by me. Some are sourced from other areas, which I do try to provide a link or reference to wherever they are used."),n.createElement("p",null,"For materials that I cannot provide the reference alongside them, I've noted them down below."),n.createElement("ul",null,n.createElement("li",null,"The link icon that you see alongside headings was gotten from"," ",n.createElement("a",{href:"http://simpleicon.com/link-2.html",rel:"noopener noreferrer",target:"_blank"},"simpleicon.com"),"."),n.createElement("li",null,"The GitHub icon that you see at the website footer was gotten from"," ",n.createElement("a",{href:"https://github.com/logos",rel:"noopener noreferrer",target:"_blank"},"GitHub's Logos and Usage page"),".")),n.createElement("p",null,"If you find any material that is not owned by me and is not properly linked to the source, open an issue at the"," ",n.createElement("a",{href:"https://github.com/sabarnac/shader-tutorial/issues",target:"_blank",rel:"noopener noreferrer"},"GitHub repository"),".")))))}}}]);
//# sourceMappingURL=component---src-pages-faq-js-38bad46c5d1b4abc7849.js.map