"use strict";(self.webpackChunkshader_tutorial=self.webpackChunkshader_tutorial||[]).push([[680],{4387:function(e,t,a){a.r(t),a.d(t,{default:function(){return h}});var n=a(6540),r=a(9460),o=a(7154),l=a(6042),i=a(7570),c=a(2007),s=a(2269);var h=e=>{let{location:{pathname:t}}=e;return n.createElement(i.A,null,n.createElement(s.A,{pathname:t,title:"Shader Advanced - Branching",description:"A look into performing branch operations in shaders.",keywords:["branching","branch","shader","advanced"]}),n.createElement(r.A,null,n.createElement("h1",null,"Shader Advanced - Branching"),n.createElement("p",null,"A question that might have come up often in past chapters is why simple conditional logic not used to execute different bits of code, instead of relying on transforming the conditional logic into mathematical logic."),n.createElement(l.A,{type:"h4"},"Examples:"),n.createElement("hr",null),n.createElement(o.A,{showHeader:!1,type:"",code:"highp float diagonal1Factor = step(0.5, randomFactor) * diagonal1Color;\nhighp float diagonal2Factor = invert_step(0.5, randomFactor) * diagonal2Color;\n// highp float diagonal1Factor = step(0.4, randomFactor) * diagonal1Color;\n// highp float diagonal2Factor = invert_step(0.6, randomFactor) * diagonal2Color;\nhighp float diagonalFactor = max(diagonal1Factor, diagonal2Factor);"}),n.createElement("hr",null),n.createElement(o.A,{showHeader:!1,type:"",code:"highp float getColorShiftFactor(highp vec3 color) {\n  return clamp(ceil(3.0 - (color.r + color.g + color.b)), 0.0, 1.0);\n}\n\nvoid main() {\n  highp float colorShift = cos(time / 500.0);\n  highp vec4 textureColor = texture2D(diffuseTextureSampler, uv);\n  highp float finalColorShift = getColorShiftFactor(textureColor.rgb) * colorShift;\n  gl_FragColor = vec4(clamp(textureColor.rgb - finalColorShift, 0.0, 1.0), textureColor.a);\n}"}),n.createElement("hr",null),n.createElement("p",null,"The reasons for this is when a GPU hits a branch, the common behavior of GPUs is to run the code for all possible branch outcomes, and then only keep the results of the final outcome."),n.createElement("p",null,"Since the GPU relies on many parallel calculations being executable at once, branches force the GPU to waste time executing the same shader code multiple times for a single vertex/fragment, instead of for other vertices/fragments."),n.createElement("p",null,"This means that if there is a significant amount of code that is only executed based upon a condition, then a lot of time is wasted by the GPU executing a lot of code that may not be required."),n.createElement("p",null,"However, using branches is not always discouraged. Some examples are:"),n.createElement("ul",null,n.createElement("li",null,"Branches that are based on the value of a uniform shouldn't lead to a performance bottleneck, since such a branch will always have the same result, irrespective of which vertex or fragment is being operated on."),n.createElement("li",null,"Similar to the last point, if the branch results are consistent (always have the same outcome), there shouldn't be a performance bottleneck."),n.createElement("li",null,"Branches that are used to set the value for a variable (ex:"," ",n.createElement("code",null,"variable = condition ? value1 : value2"),") can be performed efficiently by GPUs."),n.createElement("li",null,"Branches that are consistent over a group of pixels (ex: 8x8 group) should not produce a major performance penalty",n.createElement("strong",null,"*"),"."),n.createElement("li",null,"For certain other cases of branching, they may be optimized to not cause major performance degredation",n.createElement("strong",null,"*"),".")),n.createElement("p",null,n.createElement("strong",null,"* - This is GPU and driver dependent, so such code would require extensive testing to verify.")),n.createElement("p",{style:{paddingLeft:"5rem"}},n.createElement("em",null,"Note: Certain GLSL functions used so far (ex: ",n.createElement("code",null,"clamp"),") don't have a performance impact although they are expected to cause branching.")),n.createElement("p",{style:{paddingLeft:"5rem"}},n.createElement("em",null,"This is because either OpenGL optimizes such functions, or the GPU has special hardware or driver code optimizations to ensure that such code will not have any performance impact.")),n.createElement("p",{style:{paddingLeft:"5rem"}},n.createElement("em",null,"Some of these functions and operations have been supported by GPUs before they supported branching operations (ex: ",n.createElement("code",null,"clamp"),").")),n.createElement(l.A,{type:"h2"},"Summary"),n.createElement("ul",null,n.createElement("li",null,"Branching is generally discouraged to be performed in shaders and can negatively impact performance except in certain scenarios."),n.createElement("li",null,"Test to see if a branch affects performance, but remember that it can be GPU and driver dependent. Preferrably use branches only when you have to."))),n.createElement(c.A,{next:"/advanced/color-banding-dithering/"}))}}}]);
//# sourceMappingURL=component---src-pages-advanced-branching-js-e75434264095d9aeb00d.js.map